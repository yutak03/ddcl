name: Rust CI

on:
  push:
    branches: [main]
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '.github/workflows/ci.yaml'

  pull_request:
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '.github/workflows/ci.yaml'

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          cache-shared-key: setup-rust-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1

      - name: Check format
        run: |
          cargo fmt --all -- --check

      - uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
          filter_mode: nofilter

      - name: Build
        run: cargo build

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: llvm-tools-preview
          cache-shared-key: setup-rust-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov, cargo-nextest

      - name: Run test
        if: runner.os != 'Linux'
        run: |
          cargo nextest run

      - name: Generate coverage
        if: runner.os == 'Linux'
        run: cargo llvm-cov nextest --lcov --output-path lcov.info

      - name: Upload coverage
        if: runner.os == 'Linux'
        uses: k1LoW/octocov-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
